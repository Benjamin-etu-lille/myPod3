# Generated by Django 4.2.20 on 2025-04-03 09:48

from django.db import migrations, models
import django.db.models.deletion
import pod.main.models
import tinymce.models


class Migration(migrations.Migration):

    initial = True

    dependencies = [
        ('sites', '0002_alter_domain_unique'),
        ('flatpages', '0002_flatpage_content_en_flatpage_content_fr_and_more'),
    ]

    operations = [
        migrations.CreateModel(
            name='AdditionalChannelTab',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('name', models.CharField(help_text='Name of the tab', max_length=40, verbose_name='Value')),
                ('name_fr', models.CharField(help_text='Name of the tab', max_length=40, null=True, verbose_name='Value')),
                ('name_en', models.CharField(help_text='Name of the tab', max_length=40, null=True, verbose_name='Value')),
            ],
            options={
                'verbose_name': 'Additional channels Tab',
                'verbose_name_plural': 'Additional channel Tabs',
            },
        ),
        migrations.CreateModel(
            name='Block',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(blank=True, max_length=250, null=True, verbose_name='Title')),
                ('order', models.PositiveSmallIntegerField(blank=True, default=1, null=True, verbose_name='Order')),
                ('visible', models.BooleanField(default=True, help_text='Check this box if block is visible in page.', verbose_name='Visible')),
                ('type', models.CharField(blank=True, choices=[('carousel', 'Carousel'), ('multi_carousel', 'Multiple carousel'), ('card_list', 'Card list'), ('html', 'HTML')], default='carousel', max_length=200, null=True, verbose_name='Type')),
                ('data_type', models.CharField(blank=True, choices=[('channel', 'Channel'), ('theme', 'Theme'), ('playlist', 'Playlist'), ('last_videos', 'Last videos'), ('most_views', 'Most views'), ('event_next', 'Next events')], default=None, max_length=200, null=True, verbose_name='Data type')),
                ('html', tinymce.models.HTMLField(blank=True, help_text='Write in html inside this field.', null=True, verbose_name='HTML')),
                ('display_title', models.CharField(blank=True, max_length=250, null=True, verbose_name='Display title')),
                ('display_title_fr', models.CharField(blank=True, max_length=250, null=True, verbose_name='Display title')),
                ('display_title_en', models.CharField(blank=True, max_length=250, null=True, verbose_name='Display title')),
                ('no_cache', models.BooleanField(default=True, help_text='Check this box if you donâ€™t want to keep the cache.', verbose_name='No cache')),
                ('debug', models.BooleanField(default=False, help_text='Check this box if you want to activate debug mode.', verbose_name='Debug')),
                ('show_restricted', models.BooleanField(default=False, help_text='Check this box if you want to show restricted content.', verbose_name='Show restricted content')),
                ('must_be_auth', models.BooleanField(default=False, help_text='Check this box if users must be authenticated to view content.', verbose_name='Must be authenticated')),
                ('auto_slide', models.BooleanField(default=False, help_text='Check this box if you want auto slide.', verbose_name='Auto slide')),
                ('nb_element', models.PositiveIntegerField(blank=True, default=5, null=True, verbose_name='Maximum number of element')),
                ('multi_carousel_nb', models.PositiveIntegerField(blank=True, default=5, null=True, verbose_name='Number of element per page (multi carousel)')),
                ('view_videos_from_non_visible_channels', models.BooleanField(default=False, help_text='Check this box if you want view videos from non visible channel.', verbose_name='View videos from non visible channel')),
                ('shows_passworded', models.BooleanField(default=False, help_text='Check this box if you want view videos with password.', verbose_name='View videos with password')),
            ],
            options={
                'verbose_name': 'Block',
                'verbose_name_plural': 'Blocks',
            },
        ),
        migrations.CreateModel(
            name='Configuration',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('key', models.SlugField(editable=False, help_text='Key of the configuration', max_length=100, unique=True, verbose_name='Key')),
                ('value', models.CharField(help_text='Value of the configuration', max_length=255, verbose_name='Value')),
                ('description', models.CharField(editable=False, help_text='Description of the configuration', max_length=255, verbose_name='Description')),
                ('description_fr', models.CharField(editable=False, help_text='Description of the configuration', max_length=255, null=True, verbose_name='Description')),
                ('description_en', models.CharField(editable=False, help_text='Description of the configuration', max_length=255, null=True, verbose_name='Description')),
            ],
        ),
        migrations.CreateModel(
            name='CustomFileModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.ImageField(blank=True, max_length=255, null=True, upload_to=pod.main.models.get_upload_path_files, verbose_name='Image')),
            ],
        ),
        migrations.CreateModel(
            name='CustomImageModel',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('file', models.ImageField(blank=True, max_length=255, null=True, upload_to=pod.main.models.get_upload_path_files, verbose_name='Image')),
            ],
        ),
        migrations.CreateModel(
            name='LinkFooter',
            fields=[
                ('id', models.BigAutoField(auto_created=True, primary_key=True, serialize=False, verbose_name='ID')),
                ('title', models.CharField(max_length=250, verbose_name='Title')),
                ('title_fr', models.CharField(max_length=250, null=True, verbose_name='Title')),
                ('title_en', models.CharField(max_length=250, null=True, verbose_name='Title')),
                ('order', models.PositiveSmallIntegerField(blank=True, default=1, null=True, verbose_name='order')),
                ('url', models.CharField(blank=True, help_text='This field allows you to add an url.', max_length=250, null=True, verbose_name='Web link')),
                ('page', models.ForeignKey(blank=True, help_text='Select the page of Pod you want to link with.', null=True, on_delete=django.db.models.deletion.CASCADE, to='flatpages.flatpage')),
                ('sites', models.ManyToManyField(to='sites.site')),
            ],
            options={
                'verbose_name': 'bottom menu',
                'verbose_name_plural': 'bottom menu',
                'ordering': ['order', 'title'],
            },
        ),
    ]
